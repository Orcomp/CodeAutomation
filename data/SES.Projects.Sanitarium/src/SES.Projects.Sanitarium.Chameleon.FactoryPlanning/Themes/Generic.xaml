<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:gumui="http://schemas.wildgums.com/gum/ui"
                    xmlns:orctheming="http://schemas.wildgums.com/orc/theming"
                    xmlns:catel="http://schemas.catelproject.com"
                    xmlns:gumcontrols="http://schemas.wildgums.com/gum/controls"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:converters="clr-namespace:SES.Projects.Sanitarium.Chameleon.FactoryPlanning.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Gum.Ui.Apps.Controls;component/themes/generic.xaml" />
        <ResourceDictionary Source="/SES.Projects.Sanitarium.Chameleon.FactoryPlanning;component/themes/styles.xaml" />
        <ResourceDictionary Source="/Gum.Projects;component/Themes/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush Color="White" x:Key="DataGridReadonlyBrush"/>
    <SolidColorBrush Color="#effffd" x:Key="DataGridReadonlyAlternativeBrush"/>

    <DataTemplate x:Key="TearableTabItemTemplate" DataType="{x:Type gumui:ITabItem}">
        <Grid gumcontrols:ElementSpy.NameScopeSource="root">
            <Grid.Resources>
                <gumcontrols:ElementSpy x:Key="RootScope"/>
            </Grid.Resources>
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Detach tab"
                              Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Converter={catel:BooleanToCollapsingVisibilityConverter}}"
                              Command="{catel:CommandManagerBinding Tabs.Tear}"
                              CommandParameter="{Binding Source={StaticResource RootScope}, Path=Element.DataContext}"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <gumui:ClosableTabItem Title="{Binding Title}"
                                   CanClose="{Binding CanClose}" 
                                   TabItem="{Binding}" 
                                   MinWidth="{Binding MinWidth}"
                                   AccentBrush="{Binding Converter={gumui:TabGroupToSolidColorBrushConverter}}" />

            <Button ToolTip="Popup" 
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Converter={catel:BooleanToCollapsingVisibilityConverter}}"
                    VerticalContentAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    Width="13"
                    Height="13"
                    BorderThickness="0"
                    Padding="0"
                    Margin="0 -3 -8 0"
                    Command="{catel:CommandManagerBinding Tabs.Tear}"
                    CommandParameter="{Binding}">

                <Image Source="{orctheming:FontImage {x:Static gumui:FontAwesome5.ExternalLinkSquare}, FontFamily=FontAwesome5}"/>

            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DefaultGroupDefinitionsTemplate" 
                  DataType="{x:Type gumcontrols:RowGroupDefinitionRow}">
        <DataTemplate.Resources>
            <gumcontrols:RowGroupDefinitionRowRowGroupDefinitionToColumnHeaderMultiValueConverter x:Key="RowGroupDefinitionRowRowGroupDefinitionToColumnHeaderMultiValueConverter"/>

            <DrawingBrush x:Key="DottedBrushRed" Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="Red">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="0,0,50,50" />
                                    <RectangleGeometry Rect="50,50,50,50" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </DataTemplate.Resources>

        <Border Background="{Binding DataGrid.ColorPalette.HeaderBrush}"
                Focusable="False"
                BorderBrush="LightGray"
                Height="30"
                Margin="0"
                BorderThickness="1 1 1 0">

            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear"
                              Command="{Binding Path=PlacementTarget.DataContext.DataGrid.ViewModel.ClearGroups, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                </ContextMenu>
            </Border.ContextMenu>

            <Grid Margin ="15 0 0 0"
                  Focusable="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="25"/>
                </Grid.ColumnDefinitions>

                <ItemsControl Grid.Column="0"
                              ScrollViewer.VerticalScrollBarVisibility="Disabled"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              Focusable="False"
                              ItemsSource="{Binding GroupDefinitions}"
                              FontSize="{Binding DataGrid.FontSize}">

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Background="Transparent"
                                        Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type gumcontrols:RowGroupDefinition}">
                            <Grid>
                                <Grid.Resources>
                                    <ControlTemplate x:Key="ExpanderButtonWithoutContentTemplate"
                                                     TargetType="{x:Type ToggleButton}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>

                                                <Grid Grid.Column="0"
                                                      Background="{DynamicResource Orc.Brushes.Highlighted.Background}"
                                                      Margin="2"
                                                      Width="10"
                                                      Height="10"
                                                      VerticalAlignment="Center">

                                                    <Path x:Name="CollapsedPath"
                                                          Visibility="{TemplateBinding IsChecked, Converter={catel:BooleanToCollapsingVisibilityConverter}}"
                                                          Data="{StaticResource GroupArrowDown}"
                                                          Fill="Black"
                                                          Stretch="Fill"
                                                          StrokeThickness="2"/>

                                                    <Path x:Name="ExpandedPath"
                                                          Data="{StaticResource GroupArrowRight}"
                                                          Visibility="{TemplateBinding IsChecked, Converter={catel:BooleanToCollapsingVisibilityConverter}, ConverterParameter=True}"
                                                          Fill="Black"
                                                          Stretch="Fill"
                                                          StrokeThickness="2"/>
                                                </Grid>

                                                <ContentPresenter Grid.Column="1"
                                                                  VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>

                                        <ControlTemplate.Triggers>

                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="CollapsedPath" Property="Fill" Value="{DynamicResource AccentColorBrush}"/>
                                                <Setter TargetName="ExpandedPath" Property="Fill" Value="{DynamicResource AccentColorBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Grid.Resources>

                                <ToggleButton x:Name="GroupToggle"
                                              IsChecked="{Binding IsVisible}"
                                              Focusable="False"
                                              Margin="2 0 2 0"
                                              Template="{StaticResource ExpanderButtonWithoutContentTemplate}"
                                              Tag="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                              Background="{Binding Path=DataContext.DataGrid.ColorPalette.HighlightBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                              VerticalAlignment="Center"
                                              Height="24">

                                    <ToggleButton.Triggers>
                                        <EventTrigger RoutedEvent="ToggleButton.DragEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation To="Red"
                                                                    Storyboard.TargetProperty="(ToggleButton.BorderBrush).(SolidColorBrush.Color)"
                                                                    FillBehavior="Stop"
                                                                    Duration="0:0:1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="ToggleButton.DragOver">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation To="Red"
                                                                    Storyboard.TargetProperty="(ToggleButton.BorderBrush).(SolidColorBrush.Color)"
                                                                    FillBehavior="HoldEnd"
                                                                    Duration="0:0:0"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="ToggleButton.DragLeave">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation To="Black"
                                                                    Storyboard.TargetProperty="(ToggleButton.BorderBrush).(SolidColorBrush.Color)"
                                                                    FillBehavior="HoldEnd"
                                                                    Duration="0:0:0"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToggleButton.Triggers>

                                    <ToggleButton.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Sort by alpha/numeric">
                                                <MenuItem Header="Ascending"
                                                          Command="{Binding Path=PlacementTarget.Tag.DataGrid.ViewModel.SortAlphaNumericAscending, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                          CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>

                                                <MenuItem Header="Descending"
                                                          Command="{Binding Path=PlacementTarget.Tag.DataGrid.ViewModel.SortAlphaNumericDescending, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                          CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>

                                                <MenuItem Header="Clear"
                                                          Icon="{x:Null}"
                                                          Command="{Binding Path=PlacementTarget.Tag.DataGrid.ViewModel.ClearAlphaNumericSorting, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                          CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                            </MenuItem>

                                            <MenuItem Header="Sort by count">
                                                <MenuItem Header="Ascending"
                                                          Command="{Binding Path=PlacementTarget.Tag.DataGrid.ViewModel.SortByCountAscending, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                          CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>

                                                <MenuItem Header="Descending"
                                                          Command="{Binding Path=PlacementTarget.Tag.DataGrid.ViewModel.SortByCountDescending, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                          CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>

                                                <MenuItem Header="Clear"
                                                          Command="{Binding Path=PlacementTarget.Tag.DataGrid.ViewModel.ClearByCountSorting, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                          CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                            </MenuItem>

                                            <MenuItem Header="Clear sorting"
                                                      Command="{Binding Path=PlacementTarget.Tag.DataGrid.ViewModel.ClearSorting, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                      CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>

                                            <MenuItem Header="Ungroup"
                                                      Command="{Binding Path=PlacementTarget.Tag.DataGrid.ViewModel.Ungroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                      CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                                        </ContextMenu>
                                    </ToggleButton.ContextMenu>

                                    <b:Interaction.Behaviors>
                                        <gumcontrols:DragAndDropItemBehavior/>
                                    </b:Interaction.Behaviors>

                                    <ToggleButton.Content>
                                        <TextBlock Margin="2" VerticalAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource RowGroupDefinitionRowRowGroupDefinitionToColumnHeaderMultiValueConverter}">
                                                    <MultiBinding.Bindings>
                                                        <Binding ElementName="GroupToggle" Path ="Tag"/>
                                                        <Binding />
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </ToggleButton.Content>
                                </ToggleButton>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Label Grid.Column="1"
                       Style="{x:Null}"
                       Margin="5 0 0 0"
                       FontWeight="Bold"
                       FontStyle="Italic"
                       Focusable="False"
                       HorizontalContentAlignment="Left"
                       Content="Drag here to ungroup..."
                       Background="Transparent"
                       BorderThickness="2 0 0 0"
                       BorderBrush="{DynamicResource GrayBrush4}"
                       Visibility="Visible">
                    <Label.Resources>
                        <SolidColorBrush x:Key="Orc.Brushes.Text" Color="{DynamicResource Gray4}"/>
                    </Label.Resources>

                    <b:Interaction.Behaviors>
                        <gumcontrols:DragAndDropItemBehavior JustRemoveItemOnDrop="True"/>
                    </b:Interaction.Behaviors>

                    <Label.Triggers>
                        <EventTrigger RoutedEvent="Label.DragOver">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                   FillBehavior="HoldEnd"
                                                                   Duration="0:0:0">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource DottedBrushRed}"/>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="ToggleButton.DragLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                   FillBehavior="HoldEnd"
                                                                   Duration="0:0:0">
                                        <ObjectAnimationUsingKeyFrames.KeyFrames>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource GrayBrush4}"/>
                                        </ObjectAnimationUsingKeyFrames.KeyFrames>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Label.Triggers>
                </Label>


                <Image Grid.Column="2"
                       Margin="0"
                       Source="{Binding DataGrid.DataContext.SelectedQuantityType, Converter={converters:OptionToImageValueConverter}, Mode=OneWay}"
                       Width="20"
                       Height="20"/>

            </Grid>

        </Border>

    </DataTemplate>
</ResourceDictionary>